def stat_calculation(skill, final_skill, tickrate, player_class, daily_hours = 0, jewels_per_day = 0, pot_size=0, chest=1):
    from io import BytesIO
    from PIL import Image, ImageDraw, ImageFont
    from datetime import datetime, timedelta

    total_exp_skills = [325, 325, 658, 1001, 1354, 1716, 2089, 2471, 2864, 3268, 3682, 4107, 4542, 4989, 5447, 5917, 6398, 6891, 7396, 7913, 8443, 8985, 9540, 10108, 10689, 11283, 11890, 12511, 13146, 13796, 14460, 15139, 15832, 16540, 17263, 18001, 18756, 19526, 20312, 21115, 21934, 22770, 23623, 24493, 25381, 26287, 27211, 28153, 29114, 30094, 31093, 32111, 33148, 34206, 35284, 36382, 37501, 38641, 39803, 40987, 42192, 43420, 44670, 45943, 47239, 48559, 49902, 51270, 52662, 54079, 55522, 56990, 58484, 60004, 61551, 63125, 64726, 66355, 68012, 69698, 71413, 73157, 74930, 76733, 78567, 80432, 82328, 84255, 86214, 88206, 90231, 92289, 94381, 96507, 98668, 100865, 103097, 105365, 107669, 110011, 112390, 114807, 117263, 119758, 122292, 124867, 127482, 130139, 132837, 135577, 138361, 141188, 144058, 146972, 149932, 152938, 155989, 159087, 162232, 165425, 168667, 171958, 175299, 178691, 182133, 185627, 189174, 192774, 196428, 200136, 203900, 207720, 211595, 215528, 219519, 223569, 227678, 231847, 236077, 240369, 244723, 249141, 253622, 258169, 262781, 267460, 272206, 277020, 281903, 286856, 291880, 296975, 302142, 307383, 312699, 318090, 323557, 329101, 334722, 340422, 346202, 352064, 358008, 364034, 370144, 376339, 382620, 388988, 395444, 401989, 408624, 415351, 422170, 429083, 436091, 443195, 450396, 457695, 465093, 472592, 480192, 487896, 495704, 503618, 511639, 519767, 528005, 536354, 544814, 553388, 562076, 570881, 579803, 588844, 598006, 607290, 616697, 626228, 635885, 645670, 655584, 665629, 675806, 686117, 696564, 707147, 717869, 728731, 739736, 750884, 762177, 773618, 785207, 796947, 808839, 820885, 833087, 845446, 857965, 870646, 883490, 896500, 909676, 923021, 936538, 950228, 964093, 978135, 992357, 1006760, 1021346, 1036118, 1051078, 1066227, 1081568, 1097104, 1112837, 1128768, 1144900, 1161236, 1177778, 1194529, 1211490, 1228664, 1246054, 1263662, 1281490, 1299541, 1317819, 1336324, 1355060, 1374030, 1393236, 1412681, 1432368, 1452299, 1472477, 1492906, 1513588, 1534525, 1555721, 1577179, 1598902, 1620893, 1643155, 1665690, 1688502, 1711595, 1734971, 1758634, 1782586, 1806832, 1831374, 1856216, 1881361, 1906813, 1932576, 1958652, 1985046, 2011760, 2038799, 2066166, 2093865, 2121900, 2150275, 2178992, 2208056, 2237472, 2267243, 2297372, 2327865, 2358724, 2389955, 2421562, 2453548, 2485918, 2518676, 2551827, 2585375, 2619324, 2653679, 2688445, 2723626, 2759227, 2795252, 2831706, 2868594, 2905922, 2943693, 2981913, 3020587, 3059720, 3099316, 3139382, 3179922, 3220941, 3262445, 3304440, 3346930, 3389921, 3433419, 3477430, 3521959, 3567012, 3612594, 3658712, 3705371, 3752578, 3800339, 3848659, 3897545, 3947003, 3997040, 4047662, 4098875, 4150686, 4203101, 4256127, 4309771, 4364040, 4418940, 4474479, 4530663, 4587499, 4644995, 4703159, 4761997, 4821516, 4881725, 4942631, 5004242, 5066565, 5129607, 5193377, 5257883, 5323133, 5389135, 5455898, 5523430, 5591738, 5660832, 5730720, 5801411, 5872914, 5945237, 6018390, 6092381, 6167219, 6242914, 6319475, 6396912, 6475235, 6554452, 6634574, 6715609, 6797569, 6880463, 6964302, 7049096, 7134855, 7221589, 7309309, 7398026, 7487751, 7578495, 7670268, 7763082, 7856949, 7951879, 8047883, 8144974, 8243164, 8342464, 8442886, 8544442, 8647145, 8751007, 8856041, 8962259, 9069673, 9178298, 9288145, 9399229, 9511561, 9625156, 9740028, 9856190, 9973655, 10092439, 10212555, 10334018, 10456842, 10581041, 10706631, 10833626, 10962042, 11091893, 11223195, 11355964, 11490215, 11625964, 11763227, 11902021, 12042362, 12184266, 12327751, 12472833, 12619529, 12767856, 12917832, 13069474, 13222801, 13377831, 13534581, 13693070, 13853316, 14015338, 14179156, 14344788, 14512253, 14681571, 14852762, 15025846, 15200843, 15377773, 15556656, 15737514, 15920369, 16105240, 16292149, 16481118, 16672169, 16865325, 17060607, 17258038, 17457640, 17659437, 17863452, 18069708, 18278230, 18489041, 18702166, 18917628, 19135453, 19355667, 19578294, 19803359, 20030889, 20260909, 20493446, 20728527, 20966178, 21206426, 21449300, 21694826, 21943033, 22193949, 22447603, 22704024, 22963240, 23225282, 23490178, 23757959, 24028656, 24302299, 24578919, 24858548, 25141217, 25426958, 25715804, 26007787, 26302941, 26601298, 26902892, 27207758, 27515929, 27827440, 28142327, 28460625, 28782370, 29107598, 29436346, 29768650, 30104547, 30444076, 30787275, 31134181, 31484834, 31839274, 32197540, 32559671, 32925709, 33295694, 33669667, 34047670, 34429746, 34815937, 35206286, 35600836, 35999632, 36402718, 36810139, 37221940, 37638166, 38058864, 38484081, 38913864, 39348260, 39787317, 40231085, 40679612, 41132948, 41591143, 42054247, 42522312, 42995390, 43473533, 43956793, 44445225, 44938882, 45437817, 45942086, 46451744, 46966848, 47487454, 48013619, 48545402, 49082860, 49626053, 50175040, 50729882, 51290639, 51857372, 52430143, 53009016, 53594054, 54185320, 54782879, 55386797, 55997139, 56613972, 57237364, 57867382, 58504095, 59147571, 59797883, 60455100, 61119293, 61790535, 62468898, 63154457, 63847286, 64547461, 65255057, 65970151, 66692820, 67423143, 68161199, 68907068, 69660830, 70422567, 71192362, 71970297, 72756457, 73550926, 74353790, 75165137, 75985054, 76813629, 77650950, 78497109, 79352197, 80216305, 81089527, 81971957, 82863689, 83764819, 84675444, 85595662, 86525572, 87465273, 88414867, 89374455, 90344139, 91324024, 92314215, 93314818, 94325939, 95347686, 96380170, 97423501, 98477789, 99543148, 100619691, 101707534, 102806792, 103917582, 105040023, 106174234, 107320336, 108478452, 109648704, 110831218, 112026119, 113233533, 114453589, 115686417, 116932148, 118190914, 119462849, 120748087, 122046764, 123359019, 124684991, 126024820, 127378648, 128746618, 130128875, 131525565, 132936836, 134362837, 135803718, 137259632, 138730733, 140217176, 141719118, 143236717, 144770133, 146319529, 147885066, 149466911, 151065229, 152680189, 154311961, 155960717, 157626629, 159309874, 161010627, 162729068, 164465377, 166219736, 167992330, 169783345, 171592968, 173421389, 175268800, 177135394, 179021367, 180926916, 182852241, 184797543, 186763026, 188748896, 190755359, 192782625, 194830907, 196900419, 198991376, 201103997, 203238501, 205395112, 207574055, 209775557, 211999847, 214247157, 216517721, 218811776, 221129560, 223471315, 225837283, 228227712, 230642849, 233082946, 235548256, 238039035, 240555542, 243098038, 245666787, 248262056, 250884113, 253533231, 256209684, 258913749, 261645707, 264405840, 267194434, 270011778, 272858163, 275733884, 278639239, 281574528, 284540053, 287536122, 290563044, 293621131, 296710699, 299832067, 302985557, 306171495, 309390208, 312642029, 315927293, 319246339, 322599508, 325987145, 329409600, 332867224, 336360373, 339889407, 343454689, 347056585, 350695465, 354371703, 358085678, 361837770, 365628364, 369457850, 373326621, 377235074, 381183609, 385172631, 389202550, 393273778, 397386733, 401541835, 405739510, 409980188, 414264303, 418592293, 422964602, 427381675, 431843965, 436351929, 440906027, 445506724, 450154490, 454849799, 459593131, 464384971, 469225806, 474116132, 479056446, 484047252, 489089060, 494182383, 499327741, 504525656, 509776658, 515081283, 520440070, 525853565, 531322318, 536846885, 542427829, 548065717, 553761122, 559514622, 565326803, 571198254, 577129572, 583121360, 589174225, 595288781, 601465649, 607705456, 614008834, 620376422, 626808865, 633306816, 639870933, 646501880, 653200330, 659966961, 666802456, 673707509, 680682818, 687729088, 694847032, 702037370, 709300828, 716638141, 724050050, 731537304, 739100659, 746740879, 754458735, 762255006, 770130479, 778085948, 786122216, 794240093, 802440398, 810723957, 819091605, 827544185, 836082549, 844707557, 853420077, 862220986, 871111170, 880091524, 889162951, 898326364, 907582684, 916932842, 926377778, 935918441, 945555790, 955290793, 965124428, 975057683, 985091554, 995227049, 1005465185, 1015806990, 1026253501, 1036805766, 1047464843, 1058231800, 1069107718, 1080093686, 1091190805, 1102400186, 1113722953, 1125160239, 1136713190, 1148382961, 1160170722, 1172077650, 1184104938, 1196253789, 1208525417, 1220921050, 1233441928, 1246089301, 1258864433, 1271768600, 1284803092, 1297969210, 1311268270, 1324701598, 1338270536, 1351976438, 1365820671, 1379804617, 1393929670, 1408197239, 1422608746, 1437165628, 1451869337, 1466721337, 1481723108, 1496876145, 1512181956, 1527642066, 1543258013, 1559031353, 1574963655, 1591056505, 1607311504, 1623730268, 1640314431, 1657065641, 1673985565, 1691075883, 1708338295, 1725774516, 1743386278, 1761175329, 1779143438, 1797292388, 1815623981, 1834140037, 1852842393, 1871732906, 1890813449, 1910085915, 1929552215, 1949214280, 1969074060, 1989133523, 2009394657, 2029859469, 2050529988, 2071408261, 2092496356, 2113796360, 2135310384, 2157040557, 2178989030, 2201157974, 2223549584, 2246166075, 2269009683, 2292082669, 2315387313, 2338925920, 2362700816, 2386714351, 2410968899, 2435466855, 2460210640, 2485202697, 2510445496, 2535941528, 2561693310, 2587703385, 2613974319, 2640508705, 2667309161, 2694378330, 2721718882, 2749333514, 2777224949, 2805395936, 2833849252, 2862587702, 2891614117, 2920931357, 2950542311, 2980449895, 3010657054, 3041166762, 3071982024, 3103105873, 3134541372]
    
    skill_index = skill - 55
    final_skill_index  = final_skill - 55

    teko_medium = r"fonts/Teko-Medium.ttf"

    green_color = (0, 255, 0)
    yellow_color = (255, 215, 0)
    white_color = (255, 255, 255)
    mana_color = (68, 187, 255)
    orange_color = (240, 160, 0)
    classes_colors = [(68, 187, 255), (87, 242, 73), (224, 100, 245)] # Melee/Distance/Mage

    background_paths = [r"backgrounds/ptrain_calculator_background_melee.png", r"backgrounds/ptrain_calculator_background_dist.png", r"backgrounds/ptrain_calculator_background_mage.png"]
    image = Image.open(background_paths[player_class])
    image_modification = ImageDraw.Draw(image)

    total_exp_needed = total_exp_skills[final_skill_index] - total_exp_skills[skill_index]

    hours = total_exp_needed / tickrate

    class_names = ["Melee", "Distance", "Mage"] 

    mana_per_spell = 50
    if class_names[player_class] == "Mage":
        mana_per_spell = 40
    total_mana_spent = (total_exp_needed / 4) * mana_per_spell

    days_needed = 0
    final_day = 0

    if daily_hours > 0:

        duration_pots_2x_stat = [0, 1, 2, 4, 8]
        cost_pots_2x_stat = [0, 10, 16, 28, 48]


        if chest == 0:
            jewels_per_day = jewels_per_day + 10

        elif chest == 1:
            jewels_per_day = jewels_per_day

        exp_made_with_2x_pots = 0


        if jewels_per_day > 0 and pot_size > 0:
            pots_per_day = jewels_per_day/cost_pots_2x_stat[pot_size]
            exp_made_with_2x_pots = (pots_per_day * duration_pots_2x_stat[pot_size]) * tickrate


        daily_stat_exp = tickrate * daily_hours + exp_made_with_2x_pots + (tickrate * 2)

        if daily_hours < 16:
            bonus_exp = ((16 - daily_hours) * 0.1) * tickrate
            daily_stat_exp += bonus_exp

        off_hours = 24 - daily_hours

        off_train = off_hours * 600 
        
        total_exp_per_day = off_train + daily_stat_exp
        
        days_needed = total_exp_needed / total_exp_per_day

        now = datetime.now().replace(microsecond=0)
        final_day = now + timedelta(days=int(days_needed), hours=((days_needed - int(days_needed)) * 24))
        final_day = final_day.date()

        text_1 = "- Ptraining "
        text_2 = f"{daily_hours} hours" if jewels_per_day > 0 and pot_size > 0 else f"{daily_hours} hours "
        text_3 = ", " if jewels_per_day > 0 and pot_size > 0 else "per day; "
        text_4 = "getting " if jewels_per_day > 0 and pot_size > 0 else ""
        text_5 = f"{jewels_per_day} Bonus Jewels " if jewels_per_day > 0 and pot_size > 0 else ""
        text_6 = f"per day and using " if jewels_per_day > 0 and pot_size > 0 else ""
        text_7 = f"{duration_pots_2x_stat[pot_size]}H 2X Potions" if jewels_per_day > 0 and pot_size > 0 else ""
        text_8 = ";" if jewels_per_day > 0 and pot_size > 0 else ""

        x = 575

        for texto, cor in [(text_1, white_color), (text_2, yellow_color), (text_3, white_color), (text_4, white_color), (text_5, green_color), (text_6, white_color), (text_7, green_color), (text_8, white_color)]:
            image_modification.text((x, 250), texto, font=ImageFont.truetype(teko_medium, 50), fill=cor)
            text_width = image_modification.textlength(texto, font=ImageFont.truetype(teko_medium, 50))
            x += text_width  

        text_1 = f"- You will reach stat "
        text_2 = f"{final_skill} "
        text_3 = "in around "
        text_4 = f"{days_needed :.1f} days "
        text_5 = "("
        text_6 = f"{final_day}"
        text_7 = ")"

        x = 575

        for text, color in [(text_1, white_color), (text_2, orange_color), (text_3, white_color), (text_4, yellow_color), (text_5, white_color), (text_6, yellow_color), (text_7, white_color)]:
            image_modification.text((x, 300), text, font=ImageFont.truetype(teko_medium, 50), fill=color)
            text_width = image_modification.textlength(text, font=ImageFont.truetype(teko_medium, 50))
            x += text_width
           
    x_level_per_class = [177, 133, 187]
    image_modification.text((34, 320), f"Power Training", font=ImageFont.truetype(teko_medium, 100), fill=(61, 204, 212))
    image_modification.text((110, 395), f"Calculator", font=ImageFont.truetype(teko_medium, 100),fill=orange_color)
    image_modification.text((x_level_per_class[player_class], 470), f"{class_names[player_class]}", font=ImageFont.truetype(teko_medium, 100),fill=classes_colors[player_class])

    text_1 = "From stat "
    text_2 = f"{skill} "
    text_3 = "to "
    text_4 = f"{final_skill}"

    x = 970

    for text, color in[(text_1, white_color), (text_2, yellow_color), (text_3, white_color), (text_4, orange_color)]:
        image_modification.text((x, 40), text, font=ImageFont.truetype(teko_medium, 80), fill=color)
        text_width = image_modification.textlength(text, font=ImageFont.truetype(teko_medium, 80))
        x += text_width

    text_1 = "- You will need "
    text_2 = f"{total_exp_needed:,} "
    text_3 = "stat experience to reach stat "
    text_4 = f"{final_skill} "

    x = 575

    for text, color in [(text_1, white_color), (text_2, green_color), (text_3, white_color), (text_4, orange_color)]:
        image_modification.text((x, 150), text, font=ImageFont.truetype(teko_medium, 50), fill=color)
        text_width = image_modification.textlength(text, font=ImageFont.truetype(teko_medium, 50))
        x += text_width  

    text_1 = "- You will need "
    text_2 = f"{int(hours):,} hours "
    text_3 = "without bonuses to reach stat "
    text_4 = f"{final_skill}"

    x = 575

    for text, color in [(text_1, white_color), (text_2, yellow_color), (text_3, white_color), (text_4, orange_color)]:
        image_modification.text((x, 200), text, font=ImageFont.truetype(teko_medium, 50), fill=color)
        text_width = image_modification.textlength(text, font=ImageFont.truetype(teko_medium, 50))
        x += text_width
    
    text_1 = "Estimated number of "
    text_2 = "mana potions "
    text_3 = "and "
    text_4 = "gold "
    text_5 = "required"

    x = 700

    for text, color in [(text_1, white_color), (text_2, mana_color), (text_3, white_color), (text_4, yellow_color), (text_5, white_color)]:
        image_modification.text((x, 485), text, font=ImageFont.truetype(teko_medium, 60), fill=color)
        text_width = image_modification.textlength(text, font=ImageFont.truetype(teko_medium, 60))
        x += text_width 

    name_pots = ["Ultimate Mana Potions", "Super Mana Potions", "Greater Mana Potions", "Mana Potions"]
    pot_healing = [750, 500, 250, 100]
    pot_value = [650, 350, 150, 50]

    y = 575

    for mana_pot in range(4):
        total_gold = int(total_mana_spent/pot_healing[mana_pot]) * pot_value[mana_pot]
        if class_names[player_class] == "Distance":
            gold_arrows = (tickrate * hours) * 2
            total_gold += gold_arrows
        image_modification.text((680, y), f"{int(total_mana_spent/pot_healing[mana_pot]):,} {name_pots[mana_pot]}", font=ImageFont.truetype(teko_medium, 50), fill=mana_color)
        image_modification.text((1375, y), f"{int(total_gold):,} gold" , font=ImageFont.truetype(teko_medium, 50), fill=yellow_color)
        y+= 120
    
    buffer = BytesIO()
    image.save(buffer, format="PNG")
    buffer.seek(0)
    return buffer

def level_calculation(level, final_level):
    from io import BytesIO
    from PIL import Image, ImageDraw, ImageFont

    exp_of_each_level = [1, 9, 28, 65, 127, 219, 348, 521, 744, 1024, 1367, 1781, 2272, 2848, 3515, 4282, 5156, 6144, 7254, 8494, 9873, 11398, 13077, 14920, 16935, 19130, 21515, 24099, 26891, 29901, 33138, 36612, 40333, 44311, 48557, 53081, 57894, 63007, 68430, 74176, 80256, 86682, 93465, 100617, 108152, 116081, 124418, 133176, 142367, 152006, 162106, 172681, 183745, 195313, 207400, 220021, 233190, 246924, 261238, 276149, 291672, 307825, 324624, 342087, 360230, 379072, 398632, 418927, 439975, 461797, 484412, 507839, 532098, 557210, 583195, 610075, 637870, 666603, 696296, 726972, 758652, 791361, 825122, 859959, 895896, 932959, 971172, 1010561, 1051153, 1092973, 1136049, 1180408, 1226078, 1273086, 1321462, 1371235, 1422434, 1475090, 1529233, 1584894, 1642104, 1700896, 1761303, 1823357, 1887091, 1952541, 2019740, 2088724, 2159529, 2232191, 2306747, 2383233, 2461690, 2542154, 2624665, 2709263, 2795989, 2884883, 2975987, 3069344, 3164996, 3262988, 3363363, 3466166, 3571444, 3679242, 3789608, 3902589, 4018234, 4136593, 4257714, 4381649, 4508450, 4638168, 4770857, 4906571, 5045364, 5187291, 5332410, 5480776, 5632449, 5787487, 5945949, 6107897, 6273392, 6442495, 6615272, 6791785, 6972100, 7156283, 7344401, 7536523, 7732717, 7933053, 8137604, 8346440, 8559635, 8777263, 8999400, 9226121, 9457506, 9693631, 9934578, 10180426, 10431258, 10687158, 10948209, 11214498, 11486110, 11763135, 12045662, 12333782, 12627585, 12927166, 13232619, 13544041, 13861527, 14185178, 14515092, 14851372, 15194120, 15543441, 15899440, 16262225, 16631904, 17008588, 17392388, 17783418, 18181793, 18587629, 19001045, 19422160, 19851096, 20287977, 20732926, 21186071, 21647539, 22117462, 22595971, 23083199, 23579283, 24084359, 24598568, 25122049, 25654948, 26197408, 26749576, 27311603, 27883638, 28465836, 29058351, 29661342, 30274967, 30899388, 31534769, 32181277, 32839079, 33508347, 34189253, 34881973, 35586684, 36303566, 37032803, 37774578, 38529079, 39296496, 40077022, 40870852, 41678183, 42499216, 43334153, 44183201, 45046567, 45924463, 46817103, 47724704, 48647486, 49585671, 50539484, 51509155, 52494915, 53496999, 54515644, 55551092, 56603586, 57673374, 58760707, 59865838, 60989024, 62130526, 63290609, 64469539, 65667587, 66885029, 68122141, 69379207, 70656511, 71954342, 73272993, 74612762, 75973948, 77356857, 78761796, 80189078, 81639020, 83111942, 84608168, 86128029, 87671857, 89239990, 90832769, 92450541, 94093657, 95762471, 97457345, 99178641, 100926731, 102701986, 104504787, 106335516, 108194563, 110082320, 111999187, 113945566, 115921867, 117928503, 119965894, 122034465, 124134645, 126266870, 128431581, 130629225, 132860253, 135125125, 137424303, 139758259, 142127467, 144532409, 146973573, 149451453, 151966550, 154519369, 157110425, 159740236, 162409328, 165118235, 167867495, 170657654, 173489266, 176362890, 179279094, 182238452, 185241544, 188288959, 191381294, 194519152, 197703143, 200933887, 204212009, 207538144, 210912934, 214337029, 217811087, 221335775, 224911766, 228539745, 232220403, 235954439, 239742564, 243585493, 247483955, 251438684, 255450426, 259519933, 263647970, 267835309, 272082732, 276391031, 280761008, 285193474, 289689251, 294249170, 298874074, 303564815, 308322255, 313147268, 318040738, 323003560, 328036641, 333140896, 338317255, 343566657, 348890053, 354288407, 359762693, 365313897, 370943019, 376651069, 382439070, 388308058, 394259082, 400293202, 406411493, 412615041, 418904947, 425282325, 431748303, 438304020, 444950632, 451689308, 458521231, 465447598, 472469622, 479588528, 486805559, 494121971, 501539035, 509058039, 516680286, 524407093, 532239795, 540179743, 548228303, 556386858, 564656809, 573039572, 581536581, 590149287, 598879158, 607727681, 616696359, 625786716, 635000290, 644338642, 653803348, 663396005, 673118229, 682971654, 692957936, 703078748, 713335786, 723730762, 734265414, 744941497, 755760787, 766725082, 777836203, 789095989, 800506306, 812069037, 823786090, 835659397, 847690911, 859882608, 872236488, 884754576, 897438920, 910291592, 923314689, 936510333, 949880670, 963427874, 977154143, 991061701, 1005152797, 1019429711, 1033894745, 1048550231, 1063398529, 1078442024, 1093683132, 1109124297, 1124767991, 1140616714, 1156672999, 1172939407, 1189418527, 1206112982, 1223025424, 1240158537, 1257515036, 1275097667, 1292909211, 1310952479, 1329230317, 1347745602, 1366501247, 1385500199, 1404745438, 1424239980, 1443986876, 1463989214, 1484250117, 1504772743, 1525560290, 1546615992, 1567943120, 1589544985, 1611424934, 1633586357, 1656032680, 1678767371, 1701793937, 1725115927, 1748736931, 1772660581, 1796890551, 1821430559, 1846284363, 1871455769, 1896948624, 1922766821, 1948914299, 1975395041, 2002213077, 2029372485, 2056877389, 2084731961, 2112940421, 2141507039, 2170436133, 2199732074, 2229399280, 2259442222, 2289865422, 2320673456, 2351870950, 2383462587, 2415453101, 2447847283, 2480649977, 2513866085, 2547500566, 2581558433, 2616044760, 2650964678, 2686323377, 2722126109, 2758378183, 2795084972, 2832251910, 2869884492, 2907988279, 2946568894, 2985632024, 3025183424, 3065228913, 3105774378, 3146825772, 3188389118, 3230470507, 3273076101, 3316212131, 3359884902, 3404100788, 3448866239, 3494187777, 3540071998, 3586525577, 3633555262, 3681167879, 3729370332, 3778169606, 3827572762, 3877586945, 3928219380, 3979477375, 4031368321, 4083899694, 4137079054, 4190914049, 4245412412, 4300581967, 4356430625, 4412966387, 4470197346, 4528131688, 4586777689, 4646143723, 4706238256, 4767069853, 4828647174, 4890978979, 4954074127, 5017941577, 5082590391, 5148029733, 5214268871, 5281317178, 5349184133, 5417879325, 5487412448, 5557793309, 5629031823, 5701138020, 5774122042, 5847994147, 5922764708, 5998444215, 6075043278, 6152572627, 6231043112, 6310465706, 6390851506, 6472211734, 6554557741, 6637901003, 6722253127, 6807625851, 6894031045, 6981480713, 7069986994, 7159562165, 7250218639, 7341968972, 7434825858, 7528802137, 7623910791, 7720164950, 7817577890, 7916163037, 8015933969, 8116904415, 8219088259, 8322499542, 8427152461, 8533061372, 8640240795, 8748705410, 8858470063, 8969549767, 9081959703, 9195715221, 9310831845, 9427325271, 9545211373, 9664506202, 9785225987, 9907387141, 10031006259, 10156100124, 10282685703, 10410780158, 10540400837, 10671565286, 10804291247, 10938596657, 11074499657, 11212018589, 11351172000, 11491978643, 11634457482, 11778627691, 11924508660, 12072119993, 12221481514, 12372613267, 12525535520, 12680268767, 12836833730, 12995251361, 13155542846, 13317729607, 13481833305, 13647875840, 13815879357, 13985866248, 14157859152, 14331880962, 14507954823, 14686104138, 14866352571, 15048724048, 15233242760, 15419933169, 15608820005, 15799928274, 15993283261, 16188910529, 16386835925, 16587085584, 16789685930, 16994663678, 17202045841, 17411859731, 17624132963, 17838893454, 18056169436, 18275989448, 18498382348, 18723377313, 18951003840, 19181291756, 19414271216, 19649972706, 19888427053, 20129665423, 20373719324, 20620620614, 20870401504, 21123094559, 21378732702, 21637349222, 21898977774, 22163652384, 22431407454, 22702277763, 22976298477, 23253505147, 23533933716, 23817620524, 24104602310, 24394916218, 24688599801, 24985691026, 25286228276, 25590250358, 25897796507, 26208906385, 26523620095, 26841978178, 27164021623, 27489791866, 27819330801, 28152680781, 28489884626, 28830985624, 29176027538, 29525054614, 29878111581, 30235243661, 30596496569, 30961916525, 31331550254, 31705444992, 32083648495, 32466209042, 32853175440, 33244597031, 33640523699, 34041005872, 34446094532, 34855841218, 35270298034, 35689517652, 36113553324, 36542458881, 36976288745, 37415097932, 37858942059, 38307877354, 38761960655, 39221249424, 39685801750, 40155676358, 40630932611, 41111630523, 41597830763, 42089594660, 42586984216, 43090062105, 43598891688, 44113537016, 44634062839, 45160534613, 45693018506, 46231581409, 46776290941, 47327215460, 47884424064, 48447986608, 49017973705, 49594456740, 50177507871, 50767200044, 51363606998, 51966803276, 52576864229, 53193866029, 53817885677, 54449001010, 55087290713, 55732834325, 56385712248, 57046005760, 57713797022, 58389169085, 59072205903, 59762992344, 60461614195, 61168158173, 61882711939, 62605364104, 63336204240, 64075322890, 64822811582, 65578762832, 66343270164, 67116428112, 67898332236, 68689079131, 69488766440, 70297492863, 71115358169, 71942463207, 72778909918, 73624801348, 74480241658, 75345336134, 76220191205, 77104914449, 77999614608, 78904401601, 79819386535, 80744681719, 81680400675, 82626658154, 83583570145, 84551253891, 85529827903, 86519411970, 87520127178, 88532095917, 89555441900, 90590290177, 91636767145, 92695000568, 93765119587, 94847254736, 95941537958, 97048102618, 98167083522, 99298616926, 100442840558, 101599893628, 102769916847, 103953052445, 105149444181, 106359237364, 107582578869, 108819617151, 110070502265, 111335385881, 112614421302, 113907763482, 115215569039, 116537996281, 117875205215, 119227357572, 120594616822, 121977148193, 123375118687, 124788697105, 126218054060, 127663362001, 129124795229, 130602529916, 132096744129, 133607617847, 135135332983, 136680073401, 138242024941, 139821375439, 141418314744, 143033034746, 144665729391, 146316594709, 147985828832, 149673632015, 151380206665, 153105757355, 154850490854, 156614616148, 158398344463, 160201889286, 162025466395, 163869293880, 165733592166, 167618584038, 169524494671, 171451551647, 173399984989, 175370027178, 177361913188, 179375880506, 181412169159, 183471021746, 185552683458, 187657402111, 189785428170, 191937014781, 194112417795, 196311895799, 198535710144, 200784124976, 203057407262, 205355826824, 207679656366, 210029171504, 212404650800, 214806375792, 217234631022, 219689704071, 222171885593, 224681469341, 227218752206, 229784034246, 232377618723, 234999812132, 237650924241, 240331268118, 243041160175, 245780920194, 248550871369, 251351340341, 254182657230, 257045155676, 259939172877, 262865049621, 265823130329, 268813763091, 271837299704, 274894095714, 277984510452, 281108907075, 284267652608, 287461117983, 290689678079, 293953711766, 297253601946, 300589735595, 303962503806, 307372301834, 310819529137, 314304589421, 317827890685, 321389845269, 324990869893, 328631385709, 332311818346, 336032597957, 339794159263, 343596941606, 347441388998, 351327950164, 355257078598, 359229232608, 363244875370, 367304474979, 371408504498, 375557442013, 379751770683, 383991978798, 388278559826, 392612012474, 396992840738, 401421553961, 405898666889, 410424699728, 415000178198, 419625633597, 424301602854, 429028628589, 433807259176, 438638048800, 443521557518, 448458351323, 453449002205, 458494088211, 463594193515, 468749908475, 473961829702, 479230560127, 484556709061, 489940892269, 495383732032, 500885857220, 506447903356, 512070512691, 517754334269, 523500024002, 529308244743, 535179666353, 541114965780, 547114827129, 553179941742, 559311008269, 565508732745, 571773828671, 578107017087, 584509026655, 590980593737, 597522462475, 604135384875, 610820120884, 617577438481, 624408113751, 631312930981, 638292682734, 645348169946, 652480202008, 659689596853, 666977181049, 674343789891, 681790267483, 689317466842, 696926249981, 704617488009, 712392061225, 720250859212, 728194780935, 736224734841, 744341638954, 752546420980, 760840018402, 769223378588, 777697458891, 786263226753, 794921659813, 803673746010, 812520483692, 821462881726, 830501959606, 839638747564, 848874286683, 858209629009, 867645837666, 877183986973, 886825162558, 896570461476, 906420992332, 916377875398, 926442242735, 936615238317, 946898018153, 957291750417, 967797615569, 978416806487, 989150528598]
    exp_lost = [-2, -5, -9, -13, -19, -25, -33, -41, -51, -61, -73, -86, -100, -115, -131, -148, -166, -185, -206, -228, -251, -276, -302, -329, -357, -387, -418, -451, -485, -520, -558, -596, -636, -678, -721, -766, -813, -861, -911, -963, -1017, -1072, -1130, -1189, -1250, -1313, -1378, -1445, -1514, -1586, -1659, -1735, -1812, -1893, -1975, -2060, -2147, -2236, -2328, -2422, -2519, -2619, -2721, -2826, -2933, -3044, -3157, -3273, -3392, -3513, -3638, -3766, -3897, -4031, -4169, -4309, -4453, -4601, -4751, -4906, -5064, -5225, -5390, -5559, -5731, -5908, -6088, -6272, -6461, -6653, -6850, -7051, -7256, -7465, -7679, -7898, -8121, -8349, -8581, -8818, -9060, -9307, -9560, -9817, -10079, -10347, -10620, -10899, -11183, -11472, -11768, -12069, -12376, -12689, -13008, -13333, -13665, -14003, -14347, -14698, -15056, -15420, -15791, -16169, -16554, -16947, -17346, -17753, -18168, -18590, -19020, -19457, -19903, -20356, -20818, -21288, -21767, -22254, -22750, -23255, -23769, -24292, -24824, -25365, -25916, -26476, -27047, -27627, -28217, -28818, -29429, -30050, -30682, -31325, -31979, -32644, -33320, -34008, -34707, -35418, -36141, -36877, -37624, -38384, -39157, -39943, -40741, -41553, -42379, -43217, -44070, -44937, -45817, -46713, -47622, -48547, -49487, -50441, -51412, -52398, -53399, -54417, -55451, -56502, -57569, -58654, -59756, -60875, -62012, -63167, -64340, -65532, -66742, -67971, -69220, -70488, -71776, -73084, -74412, -75761, -77131, -78522, -79934, -81368, -82825, -84303, -85805, -87329, -88877, -90448, -92043, -93663, -95307, -96976, -98670, -100390, -102135, -103907, -105706, -107532, -109385, -111266, -113175, -115112, -117078, -119074, -121099, -123154, -125240, -127357, -129504, -131684, -133895, -136140, -138417, -140727, -143071, -145450, -147863, -150312, -152796, -155317, -157874, -160468, -163099, -165769, -168477, -171225, -174012, -176839, -179707, -182616, -185566, -188559, -191595, -194674, -197797, -200965, -204177, -207436, -210740, -214092, -217491, -220938, -224433, -227979, -231574, -235219, -238916, -242665, -246467, -250322, -254230, -258194, -262213, -266288, -270420, -274609, -278856, -283163, -287529, -291956, -296445, -300995, -305608, -310285, -315026, -319833, -324706, -329646, -334654, -339730, -344876, -350093, -355381, -360741, -366174, -371681, -377264, -382922, -388658, -394471, -400363, -406335, -412388, -418523, -424741, -431043, -437430, -443903, -450463, -457112, -463850, -470678, -477598, -484611, -491718, -498920, -506218, -513614, -521108, -528703, -536398, -544196, -552098, -560105, -568218, -576439, -584769, -593209, -601761, -610426, -619205, -628100, -637113, -646244, -655496, -664869, -674366, -683987, -693735, -703611, -713615, -723751, -734020, -744423, -754962, -765638, -776453, -787410, -798509, -809753, -821142, -832680, -844368, -856207, -868200, -880348, -892653, -905117, -917743, -930532, -943485, -956606, -969896, -983357, -996991, -1010801, -1024788, -1038955, -1053303, -1067835, -1082554, -1097461, -1112559, -1127850, -1143336, -1159020, -1174905, -1190992, -1207283, -1223783, -1240492, -1257414, -1274551, -1291905, -1309480, -1327278, -1345301, -1363553, -1382036, -1400752, -1419705, -1438898, -1458333, -1478013, -1497942, -1518121, -1538555, -1559246, -1580197, -1601412, -1622893, -1644644, -1666668, -1688967, -1711547, -1734409, -1757557, -1780996, -1804726, -1828754, -1853081, -1877713, -1902651, -1927900, -1953464, -1979346, -2005550, -2032080, -2058940, -2086133, -2113664, -2141536, -2169755, -2198322, -2227244, -2256524, -2286166, -2316174, -2346553, -2377308, -2408442, -2439961, -2471867, -2504168, -2536866, -2569966, -2603474, -2637394, -2671731, -2706490, -2741675, -2777292, -2813346, -2849842, -2886785, -2924181, -2962034, -3000350, -3039135, -3078393, -3118131, -3158355, -3199069, -3240279, -3281992, -3324213, -3366948, -3410203, -3453984, -3498298, -3543150, -3588547, -3634495, -3681001, -3728070, -3775710, -3823928, -3872729, -3922121, -3972111, -4022705, -4073911, -4125735, -4178185, -4231268, -4284992, -4339364, -4394391, -4450080, -4506441, -4563479, -4621204, -4679624, -4738745, -4798577, -4859127, -4920404, -4982416, -5045172, -5108679, -5172948, -5237987, -5303804, -5370409, -5437811, -5506018, -5575040, -5644887, -5715567, -5787092, -5859469, -5932709, -6006823, -6081819, -6157708, -6234501, -6312208, -6390839, -6470404, -6550915, -6632382, -6714817, -6798230, -6882633, -6968036, -7054452, -7141892, -7230367, -7319890, -7410473, -7502127, -7594865, -7688699, -7783641, -7879705, -7976903, -8075249, -8174754, -8275433, -8377298, -8480364, -8584643, -8690151, -8796900, -8904904, -9014179, -9124739, -9236598, -9349770, -9464272, -9580117, -9697322, -9815901, -9935870, -10057245, -10180043, -10304278, -10429968, -10557129, -10685777, -10815929, -10947603, -11080815, -11215584, -11351925, -11489859, -11629402, -11770572, -11913388, -12057869, -12204034, -12351900, -12501489, -12652818, -12805908, -12960779, -13117450, -13275942, -13436275, -13598471, -13762549, -13928532, -14096441, -14266298, -14438123, -14611940, -14787771, -14965639, -15145566, -15327576, -15511692, -15697937, -15886336, -16076913, -16269692, -16464697, -16661955, -16861490, -17063327, -17267493, -17474013, -17682915, -17894224, -18107967, -18324172, -18542867, -18764079, -18987836, -19214168, -19443101, -19674667, -19908894, -20145811, -20385449, -20627839, -20873011, -21120996, -21371825, -21625531, -21882145, -22141699, -22404228, -22669762, -22938337, -23209987, -23484744, -23762644, -24043722, -24328014, -24615554, -24906380, -25200527, -25498033, -25798935, -26103271, -26411079, -26722397, -27037264, -27355721, -27677806, -28003561, -28333025, -28666240, -29003247, -29344090, -29688809, -30037448, -30390051, -30746662, -31107324, -31472083, -31840984, -32214073, -32591397, -32973001, -33358934, -33749244, -34143979, -34543187, -34946918, -35355223, -35768152, -36185755, -36608085, -37035193, -37467133, -37903958, -38345721, -38792477, -39244282, -39701191, -40163260, -40630546, -41103107, -41581000, -42064285, -42553021, -43047267, -43547086, -44052537, -44563683, -45080587, -45603312, -46131922, -46666481, -47207056, -47753712, -48306516, -48865536, -49430840, -50002496, -50580576, -51165149, -51756287, -52354061, -52958545, -53569811, -54187936, -54812993, -55445059, -56084210, -56730525, -57384081, -58044959, -58713238, -59389000, -60072325, -60763298, -61462002, -62168522, -62882942, -63605350, -64335833, -65074479, -65821377, -66576619, -67340294, -68112495, -68893315, -69682848, -70481191, -71288437, -72104686, -72930035, -73764584, -74608433, -75461683, -76324437, -77196799, -78078873, -78970765, -79872583, -80784435, -81706429, -82638677, -83581290, -84534381, -85498064, -86472455, -87457669, -88453825, -89461043, -90479441, -91509142, -92550269, -93602947, -94667299, -95743455, -96831541, -97931688, -99044026, -100168689, -101305809, -102455522, -103617966, -104793277, -105981596, -107183064, -108397824, -109626020, -110867797, -112123303, -113392687, -114676099, -115973692, -117285618, -118612034, -119953096, -121308963, -122679795, -124065755, -125467006, -126883714, -128316046, -129764171, -131228260, -132708486, -134205023, -135718048, -137247740, -138794277, -140357843, -141938621, -143536798, -145152561, -146786101, -148437610, -150107281, -151795310, -153501897, -155227241, -156971545, -158735013, -160517852, -162320272, -164142483, -165984698, -167847135, -169730010, -171633544, -173557960, -175503482, -177470339, -179458760, -181468977, -183501225, -185555742, -187632767, -189732542, -191855313, -194001326, -196170833, -198364086, -200581340, -202822853, -205088887, -207379705, -209695574, -212036762, -214403543, -216796191, -219214984, -221660202, -224132131, -226631057, -229157270, -231711062, -234292730, -236902574, -239540895, -242208000, -244904196, -247629797, -250385118, -253170477, -255986197, -258832603, -261710024, -264618794, -267559247, -270531723, -273536566, -276574122, -279644742, -282748780, -285886594, -289058546, -292265001, -295506328, -298782901, -302095097, -305443297, -308827887, -312249256, -315707797, -319203908, -322737991, -326310451, -329921700, -333572151, -337262224, -340992342, -344762934, -348574431, -352427270, -356321894, -360258748, -364238284, -368260957, -372327228, -376437562, -380592429, -384792305, -389037671, -393329011, -397666816, -402051581, -406483808, -410964002, -415492676, -420070345, -424697533, -429374766, -434102580, -438881511, -443712106, -448594914, -453530491, -458519401, -463562210, -468659493, -473811829, -479019806, -484284014, -489605052, -494983526, -500420047, -505915231, -511469704, -517084095, -522759042, -528495189, -534293187, -540153693, -546077372, -552064895, -558116941, -564234195, -570417351, -576667108, -582984174, -589369265, -595823101, -602346414, -608939941, -615604427, -622340627, -629149300, -636031217, -642987154, -650017897, -657124239, -664306983, -671566939, -678904925, -686321770, -693818309, -701395388, -709053860, -716794588, -724618443, -732526307, -740519070, -748597632, -756762900, -765015795, -773357243, -781788184, -790309563, -798922340, -807627481, -816425964, -825318778, -834306920, -843391400, -852573236, -861853459, -871233111, -880713241, -890294913, -899979202, -909767191, -919659978, -929658671, -939764388, -949978262, -960301435, -970735062, -981280310, -991938359, -1002710401, -1013597639, -1024601290, -1035722584, -1046962762, -1058323081, -1069804809, -1081409226, -1093137629, -1104991326, -1116971638, -1129079903, -1141317470, -1153685704, -1166185982, -1178819697, -1191588258, -1204493085, -1217535616, -1230717303, -1244039613, -1257504027, -1271112045, -1284865179, -1298764958, -1312812929, -1327010652, -1341359705, -1355861681, -1370518193, -1385330867, -1400301348, -1415431298, -1430722396, -1446176337, -1461794837, -1477579628, -1493532459, -1509655100, -1525949337, -1542416975, -1559059839, -1575879772, -1592878637, -1610058316, -1627420710, -1644967741]

    level_index = level - 1
    final_level_index = final_level - 1

    teko_medium = r"fonts/Teko-Medium.ttf"

    red_color = (255, 0, 0)
    green_color = (0, 255, 0)
    yellow_golden_color = (255, 215, 0)
    white_color = (255, 255, 255)
    mana_color = (68, 187, 255)
    orange_color = (240, 160, 0)

    image = Image.open(r"backgrounds/experience_calculator_background.png")
    image_modification = ImageDraw.Draw(image)

    image_modification.text((97, 320), f"Experience", font=ImageFont.truetype(teko_medium, 100), fill=yellow_golden_color)
    image_modification.text((110, 395), f"Calculator", font=ImageFont.truetype(teko_medium, 100),fill=orange_color)

    text_1 = "From Level "
    text_2 = f"{level} "
    text_3 = "to "
    text_4 = f"{final_level} "

    x = 970

    for text, color in[(text_1, white_color), (text_2, yellow_golden_color), (text_3, white_color), (text_4, orange_color)]:
        image_modification.text((x, 40), text, font=ImageFont.truetype(teko_medium, 80), fill=color)
        text_width = image_modification.textlength(text, font=ImageFont.truetype(teko_medium, 80))
        x += text_width

    text_1 = "- You will need "
    text_2 = f"{exp_of_each_level[final_level_index] - exp_of_each_level[level_index]:,} "
    text_3 = "experience to reach level "
    text_4 = f"{final_level} "

    x = 575

    for text, color in [(text_1, white_color), (text_2, green_color), (text_3, white_color), (text_4, orange_color)]:
        image_modification.text((x, 150), text, font=ImageFont.truetype(teko_medium, 50), fill=color)
        text_width = image_modification.textlength(text, font=ImageFont.truetype(teko_medium, 50))
        x += text_width

    text_1 = "- Level "
    text_2 = f"{final_level:,} "
    text_3 = "total experience "
    text_4 = f"{exp_of_each_level[final_level_index]:,} "

    x = 575

    for text, color in [(text_1, white_color), (text_2, green_color), (text_3, white_color), (text_4, orange_color)]:
        image_modification.text((x, 200), text, font=ImageFont.truetype(teko_medium, 50), fill=color)
        text_width = image_modification.textlength(text, font=ImageFont.truetype(teko_medium, 50))
        x += text_width
    

    text_1 = f"- Total HP and MP "
    text_2 = f"{(100+(final_level*15))} " #
    text_3 = "- "
    text_4 = f"{(100+(final_level*10))} "

    x = 575

    for text, color in [(text_1, white_color), (text_2, red_color), (text_3, white_color), (text_4, mana_color),]:
        image_modification.text((x, 250), text, font=ImageFont.truetype(teko_medium, 50), fill=color)
        text_width = image_modification.textlength(text, font=ImageFont.truetype(teko_medium, 50))
        x += text_width

    text_1 = f"- Total Speed "
    text_2 = f"{300 + (int(final_level / 2.5))} "

    x = 575

    for text, color in [(text_1, white_color), (text_2, yellow_golden_color)]:
        image_modification.text((x, 300), text, font=ImageFont.truetype(teko_medium, 50), fill=color)
        text_width = image_modification.textlength(text, font=ImageFont.truetype(teko_medium, 50))
        x += text_width

    text_1 = f"- Experience lost per death "
    text_2 = f"{exp_lost[final_level_index]:,} "
  

    x = 575

    for text, color in [(text_1, white_color), (text_2, red_color)]:
        image_modification.text((x, 350), text, font=ImageFont.truetype(teko_medium, 50), fill=color)
        text_width = image_modification.textlength(text, font=ImageFont.truetype(teko_medium, 50))
        x += text_width

    image_modification.text((900, 485), "Gold needed for each skull", font=ImageFont.truetype(teko_medium, 80), fill=white_color)

    gold = final_level * 150
    orange =  final_level * 450
    red = final_level * 1350
    black = final_level * 4050

    gold_needed_for_each_skull = []

    gold_total_cursed = gold
    gold_needed_for_each_skull.append(f"{gold_total_cursed:,}") # Gold for white skull
    gold_needed_for_each_skull.append(f"{gold_total_cursed:,}")

    orange_total_cursed = gold + orange
    gold_needed_for_each_skull.append(f"{orange_total_cursed:,}")

    red_total_cursed = gold + orange + red
    gold_needed_for_each_skull.append(f"{red_total_cursed:,}")

    black_total_cursed = gold + orange + red + black
    gold_needed_for_each_skull.append(f"1x {black_total_cursed:,}")

    for black_skull_index in range (1, 13):
        black_total_cursed += (black) * (3 ** black_skull_index)
        gold_needed_for_each_skull.append(f"{black_skull_index+1}x {black_total_cursed:,}")

    y = 580
    for gold_needed in range(8):
        image_modification.text((650, y), str(gold_needed_for_each_skull[gold_needed]), font=ImageFont.truetype(teko_medium, 50), fill=yellow_golden_color)
        y += 55

    y = 580
    for gold_needed in range(8, 16):
        image_modification.text((1200, y), str(gold_needed_for_each_skull[gold_needed]), font=ImageFont.truetype(teko_medium, 50), fill=yellow_golden_color)
        y += 55

    buffer = BytesIO()
    image.save(buffer, format="PNG")
    buffer.seek(0)
    return buffer
